#!/bin/sh
set -e

if [ "$1" = configure ]; then
    # Oooh. Ugly hacks here: some zabbix-agent packages contain a
    # /etc/zabbix/zabbix_agentd.d/userparameter_mysql.conf file which
    # (also) contains mysql.status, mysql.ping, etc..
    # If it exists, disable the config so it doesn't cause duplicate
    # key conflicts with our own mysql.conf.
    if grep -q '^UserParameter=' \
            /etc/zabbix/zabbix_agentd.d/userparameter_mysql.conf \
                2>/dev/null; then
        sed -i -e 's/^UserParameter=/#DISABLED_BY_zabbix-agent-osso#/' \
            /etc/zabbix/zabbix_agentd.d/userparameter_mysql.conf
    fi

    # Remove stuff that we renamed just now (2022-06-22):
    if test "$(md5sum /etc/zabbix/scripts/mysql 2>/dev/null |
            cut -f1 -d' ')" = 1dd6f7963566be47de1f142d938318fe; then
        rm /etc/zabbix/scripts/mysql
    fi
    if test "$(md5sum /etc/zabbix/zabbix_agentd.d/mysql.conf 2>/dev/null |
            cut -f1 -d' ')" = df393de6dec4e2a8f1eefaeaa424e581; then
        rm /etc/zabbix/zabbix_agentd.d/mysql.conf
    fi
    if test "$(md5sum /etc/zabbix/config/mysql.myinstance.cnf.example \
            2>/dev/null |
            cut -f1 -d' ')" = c9657d9174975924de661ee39073112a; then
        rm /etc/zabbix/config/mysql.myinstance.cnf.example
    fi

    # Remove obsolete config files
    dpkg-query -s zabbix-agent-osso |
      sed -e '/^Conffiles:/,/^[^ ]/!d;/^ /!d;/ obsolete$/!d;s/^ *//;s/ .*//' |
      xargs --no-run-if-empty rm

    # Make sure a lib directory exists, with zabbix permissions.
    mkdir -p /var/lib/zabbix/scripts
    # Make it writable by zabbix, but do not croak if user is missing.
    chown zabbix:zabbix /var/lib/zabbix/scripts || true
    # Set correct file permissions for zabbix scripts
    find /etc/zabbix/scripts/ \
      -mindepth 1 -maxdepth 1 -type f '!' -perm -100 ! -name '.*' -print0 |
      xargs --no-run-if-empty -0 grep -Zlm1 '^#!' |
      xargs --no-run-if-empty -0 chmod 755

    # Bugfix for bad perms on config dir:
    # The config could contain secrets and auth tokens. Don't let just
    # anyone see those.
    if test -d /etc/zabbix/config; then
        chown root:zabbix /etc/zabbix/config &&
            chmod 750 /etc/zabbix/config
    fi

    # # Bugfix for missing perm on mysql script.
    # if test -f /etc/zabbix/scripts/mysql2 &&
    #         ! test -x /etc/zabbix/scripts/mysql2; then
    #     chmod 755 /etc/zabbix/scripts/mysql2
    # fi

    # # Run the update-cache script an initial time.
    # /etc/zabbix/scripts/smart.update_cache
    # # Run the daemon.cert.minexpiry script an initial time.
    # ( cert-expiry-finder --min 2>/dev/null || echo 5555 ) \
    #     >/var/lib/zabbix/scripts/daemon.cert.minexpiry.tmp
    # mv /var/lib/zabbix/scripts/daemon.cert.minexpiry.tmp \
    #     /var/lib/zabbix/scripts/daemon.cert.minexpiry

    # Restart zabbix-agent if it was running.
    if [ -d /run/systemd/system ]; then
        # https://sources.debian.org/\
        #   src/debhelper/10.2.5/autoscripts/postinst-systemd-restart/
        if deb-systemd-invoke status zabbix-agent >/dev/null 2>&1; then
            deb-systemd-invoke try-reload-or-restart zabbix-agent ||
                echo "systemd zabbix-agent restart fail?" >&2
        fi
        if deb-systemd-invoke status zabbix-agent2 >/dev/null 2>&1; then
            deb-systemd-invoke try-reload-or-restart zabbix-agent2 ||
                echo "systemd zabbix-agent2 restart fail?" >&2
        fi
    elif [ -x /etc/init.d/zabbix-agent ]; then
        # https://sources.debian.org/\
        #  src/debhelper/10.2.5/autoscripts/postinst-init/
        if invoke-rc.d zabbix-agent status >/dev/null 2>&1; then
            invoke-rc.d zabbix-agent restart ||
                echo "sysv zabbix-agent restart fail?" >&2
        fi
        if invoke-rc.d zabbix-agent2 status >/dev/null 2>&1; then
            invoke-rc.d zabbix-agent2 restart ||
                echo "sysv zabbix-agent2 restart fail?" >&2
        fi
    elif service zabbix-agent2 status >/dev/null 2>&1; then
        service zabbix-agent2 restart ||
            echo "upstart zabbix-agent2 restart fail?" >&2
    elif service zabbix-agent status >/dev/null 2>&1; then
        service zabbix-agent restart ||
            echo "upstart zabbix-agent restart fail?" >&2
    else
        echo "(don't know how to restart zabbix-agent. *you* do it.)" >&2
    fi
fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
