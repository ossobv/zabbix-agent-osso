#!/bin/sh
# [This file is part of the zabbix-agent-osso package]
# REQUIRES: jq, kubectl
#

get_contexts() {
    kubectl config get-contexts -oname
}

get_namespaces() {
    kubectl --context "$1" get namespace \
        -l ossobv/zabbix-agent-osso.k8s-pods-ready=true \
        -o go-template='{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}' \
        2>/dev/null
}

make_json() {
    echo '{"{#CONTEXT}":"'$1'","{#NAMESPACE}":"'$2'","{#STARTSWITH}":"'$3'"}'
}


if [ "$1" = "discover" ]; then
    for context in $(get_contexts); do
        for namespace in $(get_namespaces "$context"); do
            startswith=$(kubectl --context $context get namespace $namespace \
                -ojsonpath='{.metadata.labels}' |
                jq -r '."ossobv/zabbix-agent-osso.k8s-pods-ready-startswith"')
            make_json "$context" "$namespace" "$startswith"
        done
    done | jq -sc
    exit 0

elif [ "$1" = "values" ]; then
    kubectl --context "$2" get pods -n "$3" -ojson |
        jq -r '[.items[] | select(.metadata.name | startswith("'"$4"'")) |
            .status.containerStatuses[] | .ready==true] | all'
    exit 0

else
    echo "possible actions:
    discover
    values context namespace startswith" 2>&1
    exit 1
fi
