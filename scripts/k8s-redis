#!/bin/sh
# [This file is part of the zabbix-agent-osso package]
# REQUIRES: jq, kubectl
#

get_contexts() {
    kubectl config get-contexts -oname
}

get_namespaces() {
    kubectl --context "$1" get namespace \
        -l ossobv/zabbix-agent-osso.k8s-redis=true \
        -o go-template='{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}' \
        2>/dev/null
}

get_configmaps() {
    kubectl --context "$1" -n "$2" get configmap -oname |
        sed -e 's/^configmap\///;/^status-/!d'
}

make_json() {
    echo '{"{#CONTEXT}":"'$1'","{#NAMESPACE}":"'$2'","{#POD}":"'$3'"}'
}


if [ "$1" = "discover" ]; then
    for context in $(get_contexts); do
        for namespace in $(get_namespaces "$context"); do
            for configmap in $(get_configmaps "$context" "$namespace"); do
                make_json "$context" "$namespace" "${configmap#status-}"
            done
        done
    done | jq -sc
    exit 0

elif [ "$1" = "values" ]; then
    exec kubectl --context "$2" -n "$3" get configmap "status-$4" \
        -o jsonpath='{.data.status}'

else
    echo "possible actions:
    discover
    values context namespace pod" >&2
    exit 1
fi
